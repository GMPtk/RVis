<UserControl x:Class="RVisUI.Controls.Views.ImportSimulationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RVisUI.Controls.Views"
             xmlns:ctrls="clr-namespace:RVisUI.Controls"
             xmlns:mvvmd="clr-namespace:RVisUI.Mvvm.Design;assembly=RVisUI.Mvvm"
             xmlns:wpf="clr-namespace:RVisUI.Wpf;assembly=RVisUI.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="700" 
             d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=mvvmd:ImportSimulationViewModel, IsDesignTimeCreatable=True}"
             >

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/RVisUI.AppInf;component/Resources/HelpButton.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>

  <AdornerDecorator>
    <wpf:AdornedControl>
      <wpf:AdornedControl.Style>
        <Style TargetType="{x:Type wpf:AdornedControl}">
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsBusy}" Value="True">
              <Setter Property="IsAdornerVisible" Value="True"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </wpf:AdornedControl.Style>
      <wpf:AdornedControl.AdornerContent>
        <ctrls:BusyOverlay BusyWith="{Binding BusyWith}"
                           Messages="{Binding BusyMessages}"
                           EnableCancel="{Binding EnableBusyCancel}"
                           Cancel="{Binding BusyCancel}"
                           />
      </wpf:AdornedControl.AdornerContent>

      <Grid Margin="20,20,20,20">

        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0 20">

          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>

          <Button Style="{StaticResource MaterialDesignRaisedButton}"
                  Width="100"
                  ToolTip="Select .R file"
                  Command="{Binding BrowseForRFile}"
                  Margin="20 0"
                  Grid.Column="0"
                  Content="Browse..."
                  />

          <md:PackIcon Kind="FileDocumentBox" 
                       Grid.Column="1" 
                       Height="30" 
                       Width="30" 
                       />

          <TextBlock VerticalAlignment="Center" 
                     TextTrimming="WordEllipsis"
                     Margin="10 0"
                     Grid.Column="2">
            <TextBlock.Style>
              <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody2TextBlock}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsEnabled, ElementName=_btnInspectRFile}" Value="True">
                    <Setter Property="Text" Value="{Binding PathToRFile}"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsEnabled, ElementName=_btnInspectRFile}" Value="False">
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="Text" Value="(Select a .R file)"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>

          <Button x:Name="_btnInspectRFile"
                  Style="{StaticResource MaterialDesignRaisedButton}"
                  Width="100"
                  ToolTip="Run and find objects in global environment"
                  Command="{Binding InspectRFile}"
                  Margin="20 0"
                  Grid.Column="3" 
                  Content="Inspect"
                  />

        </Grid>

        <Grid Grid.Row="1" 
              Margin="20"
              Width="Auto"
              HorizontalAlignment="Center">

          <Grid.Style>
            <Style TargetType="Grid">
              <Style.Triggers>
                <DataTrigger Binding="{Binding ManagedImport}" Value="{x:Null}">
                  <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Grid.Style>

          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>

          <Grid.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
              <Setter Property="HorizontalAlignment" Value="Center"/>
              <Setter Property="Margin" Value="10 0"/>
            </Style>
          </Grid.Resources>

          <TextBlock Text="Globals:"
                     />

          <TextBlock Text="{Binding UnaryFuncs.Count, StringFormat='{}{0} unary fn(s)'}"
                     Grid.Column="1"
                     />

          <TextBlock Text="{Binding Scalars.Count, StringFormat='{}{0} scalar(s)'}"
                     Grid.Column="2"
                     />

          <TextBlock Text="{Binding ScalarSets.Count, StringFormat='{}{0} scalar set(s)'}"
                     Grid.Column="3"
                     />

          <TextBlock Text="{Binding DataSets.Count, StringFormat='{}{0} data set(s)'}"
                     Grid.Column="4"
                     />

        </Grid>

        <Grid Grid.Row="2" Margin="20">
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
          </Grid.RowDefinitions>

          <TextBlock Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                     Text="USE EXECUTIVE FUNCTION"
                     HorizontalAlignment="Center"
                     />

          <TextBlock Style="{StaticResource MaterialDesignBody1TextBlock}" 
                     TextWrapping="Wrap"
                     Margin="20"
                     Grid.Row="1"
                     >
            <TextBlock.Inlines>
              <Run>
                To use this import option, your code must provide a function
                whose single argument is a vector or list of parameters, and 
                whose return type is a matrix, a dataframe, or a list. 
                Before proceeding, identify both the function and the list 
                object containing the parameters.
              </Run>
            </TextBlock.Inlines>
          </TextBlock>

          <Button Grid.Row="2" 
                  Style="{DynamicResource HelpButtonStyle}"
                  Margin="20"
                  ToolTip="Help about executive functions" 
                  Tag="rvis/application/import"
                  />

          <Grid Grid.Row="3" Margin="20">
            
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition/>
              <RowDefinition/>
              <RowDefinition/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            
            <Grid.Resources>
              <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10 3 0 3"/>
              </Style>
            </Grid.Resources>

            <TextBlock HorizontalAlignment="Right">Exec fn:</TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding ExecutiveFunction.Symbol, FallbackValue=?}"/>

            <TextBlock Grid.Row="1" HorizontalAlignment="Right">Param obj:</TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ExecutiveFormal.Symbol, FallbackValue=?}"/>

            <TextBlock Grid.Row="2" HorizontalAlignment="Right">Output tbl:</TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ExecutiveOutput.NColumns, FallbackValue=?, StringFormat={}{0} column(s)}"/>

            <TextBlock Grid.Row="3" HorizontalAlignment="Right">Indep var:</TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding ExecutiveOutput.NumDataColumns[0].Name, FallbackValue=?}"/>

            <Button Style="{StaticResource MaterialDesignRaisedButton}"
                    Width="100"
                    ToolTip="Choose from among items created by your simulation"
                    Command="{Binding SelectExecutive}"
                    Margin="10"
                    Grid.Column="2" Grid.RowSpan="4"
                    Content="Select..."
                    />
            
          </Grid>

          <Button Style="{StaticResource MaterialDesignRaisedButton}"
                  Width="100"
                  ToolTip="Import .R file into RVis library"
                  Command="{Binding ImportUsingExec}"
                  Margin="40"
                  Grid.Row="4" 
                  Content="Import..."
                  />

          <TextBlock Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                     Text="USE TEMPLATE"
                     HorizontalAlignment="Center"
                     Grid.Column="1"
                     />

          <TextBlock Style="{StaticResource MaterialDesignBody1TextBlock}" 
                     TextWrapping="Wrap"
                     Margin="20"
                     Grid.Column="1"
                     Grid.Row="1"
                      >
            <TextBlock.Inlines>
              <Run>
                To execute your simulation, your code will be sourced by RVis each time.
                To vary input parameters, RVis will edit your code and re-write the .R file
                before sourcing it. In the import step for this option, you will be required
                to identify parameter assignments and output objects present in the global
                environment.
              </Run>
            </TextBlock.Inlines>
          </TextBlock>

          <Button Grid.Row="2"
                  Grid.Column="1"
                  Style="{DynamicResource HelpButtonStyle}"
                  Margin="20"
                  ToolTip="Help about templates" 
                  Tag="rvis/application/import"
                  />

          <Button Style="{StaticResource MaterialDesignRaisedButton}"
                  Width="100"
                  ToolTip="Import .R file into RVis library"
                  Command="{Binding ImportUsingTmpl}"
                  Margin="40"
                  Grid.Column="1"
                  Grid.Row="4"
                  Content="Import..."
                  />

        </Grid>

      </Grid>

    </wpf:AdornedControl>
  </AdornerDecorator>

</UserControl>
