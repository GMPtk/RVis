//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sampling.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sampling.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rvis_n &lt;- {0}
        ///rvis_dimension &lt;- {1}
        ///rvis_randomized &lt;- {2}
        ///rvis_seed &lt;- {3}
        ///
        ///rvis_lhsDesign_out &lt;- DiceDesign::lhsDesign(
        ///  rvis_n, 
        ///  rvis_dimension, 
        ///  randomized = rvis_randomized, 
        ///  seed = rvis_seed
        ///  ).
        /// </summary>
        internal static string FMT_LHSDESIGN {
            get {
                return ResourceManager.GetString("FMT_LHSDESIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to wd &lt;- getwd()
        ///data_directory &lt;- &quot;{0}&quot;
        ///setwd(data_directory)
        ///
        ///# load samples and plot histograms
        ///
        ///parameter_names &lt;- c({1})
        ///samples &lt;- read.csv(&quot;{2}.csv&quot;, header = TRUE)
        ///
        ///hist_samples &lt;- function(parameter_name)
        ///{{
        ///  hist(
        ///    samples[,parameter_name], 
        ///    main = paste(parameter_name, &quot;Samples&quot;), 
        ///    xlab = parameter_name
        ///    )
        ///}}
        ///
        ///invisible(capture.output(lapply(parameter_names, hist_samples)))
        ///
        ///# load outputs and plot traces
        ///
        ///output_names &lt;- c({3})
        ///
        ///load_output &lt;- function(output_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FMT_LOAD_DATA {
            get {
                return ResourceManager.GetString("FMT_LOAD_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to rvis_T0 &lt;- {0}
        ///rvis_c &lt;- {1}
        ///rvis_it &lt;- {2}
        ///rvis_p &lt;- {3}
        ///rvis_profile &lt;- &quot;{4}&quot;
        ///rvis_Imax &lt;- {5}
        ///
        ///rvis_lhsDesign_out_opt &lt;- DiceDesign::maximinSA_LHS(
        ///  rvis_lhsDesign_out$design,
        ///  T0 = rvis_T0,
        ///  c = rvis_c,
        ///  it = rvis_it,
        ///  p = rvis_p,
        ///  profile = rvis_profile,
        ///  Imax = rvis_Imax
        ///  ).
        /// </summary>
        internal static string FMT_MAXIMINSALHS {
            get {
                return ResourceManager.GetString("FMT_MAXIMINSALHS", resourceCulture);
            }
        }
    }
}
